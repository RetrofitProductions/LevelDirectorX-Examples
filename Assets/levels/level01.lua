-- Generated by Level Director X v1.0.0 on Thu Aug 27 20:17:10 2015 --
require("lib.LD_HelperX")
local M={}
-----------------------------------
function M:loadAssets()
-----------------------------------
	local assets={}
	assets.spriteSheetData={}
	assets.spriteSheetData['bird']={}
	assets.spriteSheetData['bird'].frames ={
		{x=0,y=0,width=32,height=40},
		{x=32,y=0,width=32,height=40},
		{x=64,y=0,width=32,height=40},
		{x=96,y=0,width=32,height=40},
		{x=128,y=0,width=32,height=40},
		{x=0,y=40,width=32,height=40},
		{x=32,y=40,width=32,height=40},
		{x=64,y=40,width=32,height=40},
		{x=96,y=40,width=32,height=40},
		{x=128,y=40,width=32,height=40},
		{x=0,y=80,width=32,height=40},
		{x=32,y=80,width=32,height=40},
		{x=64,y=80,width=32,height=40},
		{x=96,y=80,width=32,height=40},
		{x=128,y=80,width=32,height=40},
		{x=0,y=120,width=32,height=40},
		{x=32,y=120,width=32,height=40},
		{x=64,y=120,width=32,height=40},
		{x=96,y=120,width=32,height=40},
		{x=128,y=120,width=32,height=40},
		{x=0,y=160,width=32,height=40},
		{x=32,y=160,width=32,height=40},
		{x=64,y=160,width=32,height=40},
		{x=96,y=160,width=32,height=40},
		{x=128,y=160,width=32,height=40},
		sheetContentWidth=160,
		sheetContentHeight=200
	}
	assets.spriteSheetData['dog_brown']={}
	assets.spriteSheetData['dog_brown'].frames ={
		{x=0,y=0,width=46,height=27},
		{x=46,y=0,width=46,height=27},
		{x=92,y=0,width=46,height=27},
		{x=0,y=27,width=46,height=27},
		{x=46,y=27,width=46,height=27},
		{x=92,y=27,width=46,height=27},
		sheetContentWidth=138,
		sheetContentHeight=54
	}
	assets['sky_0']={file ='sky.jpg',name='sky_0',class='',aX=0.5,aY=0.5,width=480,height=320,frame=0,spriteSheetName='sky',frameCount=1,
		 }
	assets['grass_0']={file ='grass.png',name='grass_0',class='',aX=0.5,aY=0.5,width=480,height=40,frame=0,spriteSheetName='grass',frameCount=1,
		physics={isEnabled=true,source='Asset',bodyType='static',isFixedRotation=false,isSleepingAllowed=false,isSensor=false,isBullet=false,shapes={{bodyShape='Polygon',shape={-240,13,240,12,241,23,-241,22},bounce=0.2,friction=0.3,density=1,radius=0,categoryBits=0,maskBits=0,groupIndex=0},}	}  }
	assets['bird']={file ='bird.png',name='bird',class='',aX=0.5,aY=0.5,width=32,height=40,frame=1,spriteSheetName='bird',frameCount=25,
		sequenceData={{name='fly',frames={ 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22 },time =500,loopCount=0,loopDirection='forward' },},
		sequenceInfo={default='',play=false },
		physics={isEnabled=true,source='Asset',bodyType='dynamic',isFixedRotation=true,isSleepingAllowed=false,isSensor=false,isBullet=false,shapes={{bodyShape='Polygon',shape={-7,-3,9,-3,11,-1,12,1,12,2,-2,15,-5,15,-13,4},bounce=0.2,friction=0.3,density=1,radius=0,categoryBits=0,maskBits=0,groupIndex=0},}	}  }
	assets['dog_brown_0']={file ='dog_brown.png',name='dog_brown_0',class='',aX=0.5,aY=0.5,width=46,height=27,frame=1,spriteSheetName='dog_brown',frameCount=6,
		sequenceData={{name='walk',frames={ 1,2,3 },time =400,loopCount=0,loopDirection='forward' },{name='stand',frames={ 4 },time =200,loopCount=0,loopDirection='forward' },{name='pee',frames={ 5,6 },time =900,loopCount=0,loopDirection='forward' },},
		sequenceInfo={default='walk',play=true },
		physics={isEnabled=true,source='Asset',bodyType='dynamic',isFixedRotation=false,isSleepingAllowed=false,isSensor=false,isBullet=false,shapes={}	}  }
	assets['dog_brown_1']={file ='dog_brown.png',name='dog_brown_1',class='',aX=0.5,aY=0.5,width=46,height=27,frame=2,spriteSheetName='dog_brown',frameCount=6,
		 }
	assets['dog_brown_2']={file ='dog_brown.png',name='dog_brown_2',class='',aX=0.5,aY=0.5,width=46,height=27,frame=3,spriteSheetName='dog_brown',frameCount=6,
		 }
	assets['dog_brown_3']={file ='dog_brown.png',name='dog_brown_3',class='',aX=0.5,aY=0.5,width=46,height=27,frame=4,spriteSheetName='dog_brown',frameCount=6,
		 }
	assets['dog_brown_4']={file ='dog_brown.png',name='dog_brown_4',class='',aX=0.5,aY=0.5,width=46,height=27,frame=5,spriteSheetName='dog_brown',frameCount=6,
		 }
	assets['dog_brown_5']={file ='dog_brown.png',name='dog_brown_5',class='',aX=0.5,aY=0.5,width=46,height=27,frame=6,spriteSheetName='dog_brown',frameCount=6,
		 }
	assets['palm']={file ='palm.png',name='palm',class='',aX=0.5,aY=0.5,width=338,height=338,frame=0,spriteSheetName='palm',frameCount=1,
		 }
	return assets
end -- loadAssets 

------------------------------------------
function M:createLevel(LD_Helper_Instance)
------------------------------------------
	local instance=LD_Helper_Instance
	local objProps={}
	local level={}
    local obj=nil
	if (instance.viewGroup == nil) then
		level.view=display.newGroup() 
	else
		level.view=instance.viewGroup
	end
	level.view.anchorChildren =false 
	display.setDefault( 'background',102/255,102/255,102/255,255/255)
	display.setDefault( "anchorX",0.5 )
	display.setDefault( "anchorY",0.5 )	
	display.setDrawMode("wireframe",false)
	level.name='level01' 
	-- Load Assets
	level.assets=self:loadAssets()
	-- Physics properties
	physics.setGravity(0,0) 
	physics.setDrawMode('normal')
	physics.setPositionIterations(8)	
	physics.setVelocityIterations(3)	
	level.parallaxEnabled=true
	level.Enemy=''
	-- Layers --
	level.layers={} 
	---- bg ------------------------------------------------------------------------------------
	level.layers['bg']={} 
	level.layers['bg'].view=display.newGroup() 
	level.layers['bg'].name='bg' 
	if (level.parallaxEnabled) then
		level.layers['bg'].speed={x=0,y=0}
		level.layers['bg'].repeated=false
		level.layers['bg'].cullingMethod=0
	else
		level.layers['bg'].cullingMethod=0 
	end
	level.layers['bg'].objects={} 
	objProps={name='sky',objType='LDImage',class='',width=960,height=640,x=480,y=320,xScale=2*1,yScale=2*1,assetName='sky_0',
}	
	obj=instance:createObject(level.layers['bg'],objProps,level.assets) 
	instance:insertLayer(level,level.layers['bg'])
	---- dog ------------------------------------------------------------------------------------
	level.layers['dog']={} 
	level.layers['dog'].view=display.newGroup() 
	level.layers['dog'].name='dog' 
	if (level.parallaxEnabled) then
		level.layers['dog'].speed={x=0,y=0}
		level.layers['dog'].repeated=false
		level.layers['dog'].cullingMethod=0
	else
		level.layers['dog'].cullingMethod=0 
	end
	level.layers['dog'].objects={} 
	objProps={name='rigsby',objType='LDImage',class='',width=96,height=64,x=432,y=599,xScale=2.08696*-1,yScale=2.37037*1,assetName='dog_brown_0',
}	
	obj=instance:createObject(level.layers['dog'],objProps,level.assets) 
	instance:insertLayer(level,level.layers['dog'])
	---- grass ------------------------------------------------------------------------------------
	level.layers['grass']={} 
	level.layers['grass'].view=display.newGroup() 
	level.layers['grass'].name='grass' 
	if (level.parallaxEnabled) then
		level.layers['grass'].speed={x=1,y=0}
		level.layers['grass'].repeated=true
		level.layers['grass'].cullingMethod=0
	else
		level.layers['grass'].cullingMethod=0 
	end
	level.layers['grass'].objects={} 
	objProps={name='asset_1',objType='LDImage',class='',width=480,height=40,x=240,y=620,xScale=1*1,yScale=1*1,assetName='grass_0',
}	
	obj=instance:createObject(level.layers['grass'],objProps,level.assets) 
	objProps={name='asset_2',objType='LDImage',class='',width=480,height=40,x=720,y=620,xScale=1*1,yScale=1*1,assetName='grass_0',
}	
	obj=instance:createObject(level.layers['grass'],objProps,level.assets) 
	objProps={name='asset_3',objType='LDImage',class='',width=480,height=40,x=1680,y=620,xScale=1*1,yScale=1*1,assetName='grass_0',
}	
	obj=instance:createObject(level.layers['grass'],objProps,level.assets) 
	objProps={name='asset_4',objType='LDImage',class='',width=480,height=40,x=1200,y=620,xScale=1*1,yScale=1*1,assetName='grass_0',
}	
	obj=instance:createObject(level.layers['grass'],objProps,level.assets) 
	instance:insertLayer(level,level.layers['grass'])
	---- bush ------------------------------------------------------------------------------------
	level.layers['bush']={} 
	level.layers['bush'].view=display.newGroup() 
	level.layers['bush'].name='bush' 
	if (level.parallaxEnabled) then
		level.layers['bush'].speed={x=1.2,y=0}
		level.layers['bush'].repeated=true
		level.layers['bush'].cullingMethod=0
	else
		level.layers['bush'].cullingMethod=0 
	end
	level.layers['bush'].objects={} 
	objProps={name='palm',objType='LDImage',class='',width=338,height=338,x=1737,y=489,xScale=1*1,yScale=1*1,assetName='palm',
}	
	obj=instance:createObject(level.layers['bush'],objProps,level.assets) 
	instance:insertLayer(level,level.layers['bush'])
	---- hud ------------------------------------------------------------------------------------
	level.layers['hud']={} 
	level.layers['hud'].view=display.newGroup() 
	level.layers['hud'].name='hud' 
	if (level.parallaxEnabled) then
		level.layers['hud'].speed={x=0,y=0}
		level.layers['hud'].repeated=false
		level.layers['hud'].cullingMethod=0
	else
		level.layers['hud'].cullingMethod=0 
	end
	level.layers['hud'].objects={} 
	objProps={name='title',objType='LDText',class='',width=444,height=38,x=13,y=0,xScale=1*1,yScale=1*1,assetName='',
		rotation=0,enableDrag=false,anchorX=0,anchorY=0,alpha=1,isVisible=true,blendMode='normal',
		textProps={text='Level Director X - Asset Demo',font='Arial Black',size=24,embossed=false,embossHighlightColorR=255/255,embossHighlightColorG=255/255,embossHighlightColorB=255/255,embossHighlightColorA=255/255,embossShadowColorR=255/255,embossShadowColorG=255/255,embossShadowColorB=255/255,embossShadowColorA=255/255},
		styleProps={radius=222,cornerRadius=0,strokeWidth=1,strokeColorR=255/255,strokeColorG=255/255,strokeColorB=255/255,strokeColorA=255/255,fillColorR=0/255,fillColorG=0/255,fillColorB=0/255,fillColorA=0/255},
		fillProps ={fillType=0,fillAssetName='',fillFrame=0},
		gradientProps={direction=0,fillColorR=0/255,fillColorG=0/255,fillColorB=0/255,fillColorA=0/255},
}	
	obj=instance:createObject(level.layers['hud'],objProps,level.assets) 
	instance:insertLayer(level,level.layers['hud'])
	--level.ldVersion=1.0.0	-- Level Director Version
	-- Parallax (after layers)
	level.canvasWidth=1920
	level.canvasHeight=640
	if level.parallaxEnabled then
		level.parallaxInfinite=true
		level.parallaxDamping=1
		instance:createParallax(level)
	end
	return level
end -- createLevel
return M


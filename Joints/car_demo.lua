-- Generated by Level Director X v1.0.0 on Sat Aug 1 09:35:48 2015 --
require("lib.LD_HelperX")
local M = {}
-----------------------------------
function M:loadAssets()
-----------------------------------
	local assets = {}
	assets.spriteSheetData = {}
	return assets
end -- loadAssets 

------------------------------------------
function M:createLevel(LD_Helper_Instance)
------------------------------------------
	local instance = LD_Helper_Instance
	local objProps = {}
	local level = {}
    local obj = nil
	if (application.LevelDirectorSettings.viewGroup == nil) then
		level.view = display.newGroup() 
	else
		level.view = application.LevelDirectorSettings.viewGroup
	end
	level.view.anchorChildren =false 
	display.setDefault( 'background',  102 / 255, 102 / 255, 102 / 255, 255 / 255)
	display.setDefault( "anchorX", 0.5 )
	display.setDefault( "anchorY", 0.5 )	
	display.setDrawMode("wireframe",false)
	level.name = 'car_demo' 
	-- Load Assets
	level.assets = self:loadAssets()
	-- Physics properties
	physics.setGravity(0,9.8) 
	physics.setDrawMode('hybrid')
	physics.setPositionIterations(8)	
	physics.setVelocityIterations(3)	
	level.parallaxEnabled = false
	level.Enemy = ''
	-- Layers --
	level.layers = {} 
	---- main ------------------------------------------------------------------------------------
	level.layers['main'] = {} 
	level.layers['main'].view = display.newGroup() 
	level.layers['main'].name = 'main' 
	if (level.parallaxEnabled) then
		level.layers['main'].speed = {x = 0, y = 0}
		level.layers['main'].repeated = false
		level.layers['main'].cullingMethod = 0
	else
		level.layers['main'].cullingMethod = 0 
	end
	level.layers['main'].objects = {} 
	objProps = 
	{
		name 	= 'chassis', 
		objType = 'LDRectangle',
		class = '',
		width	= 217.021,
		height	= 18.5294,
		x		= 1073,
		y		= 64,
		xScale		= 1 * 1,
		yScale		= 1 * 1,
		assetName	= '',
		styleProps	= {radius = 108.51, cornerRadius = 0,strokeWidth = 1, strokeColorR = 255 / 255,strokeColorG = 255 / 255,strokeColorB = 255 / 255, strokeColorA = 255 / 255, fillColorR = 0 / 255, fillColorG = 0 / 255, fillColorB = 0 / 255, fillColorA = 0 / 255},
		fillProps = {fillType = 0, fillAssetName = '', fillFrame = 0 },
		gradientProps = {direction = 0, fillColorR = 0 / 255,fillColorG = 0 / 255,fillColorB = 0 / 255, fillColorA = 0 / 255},
		physics	= 	{	isEnabled = true, source = 'Object',
						bodyType  = 'dynamic',
						isFixedRotation = false,
						isSleepingAllowed = false,
						isSensor = false,
						isBullet = false,
						gravityScale = 1,
						shapes = {
							{bodyShape = 'Rectangle',
							shape     = { },
							bounce    = 0.2,
							friction  = 0.3,
							density   = 1,
							radius    = 0,
							categoryBits = 0,
							maskBits  = 0,
							groupIndex = 0 },
						}
					}
		}
	obj = instance:createObject(level.layers['main'],objProps, level.assets) 
	objProps = 
	{
		name 	= 'front_wheel', 
		objType = 'LDEllipse',
		class = '',
		width	= 61.0096,
		height	= 61.0096,
		x		= 1001,
		y		= 114,
		xScale		= 1 * 1,
		yScale		= 1 * 1,
		assetName	= '',
		styleProps	= {radius = 30.5048, cornerRadius = 0,strokeWidth = 1, strokeColorR = 255 / 255,strokeColorG = 255 / 255,strokeColorB = 255 / 255, strokeColorA = 255 / 255, fillColorR = 0 / 255, fillColorG = 0 / 255, fillColorB = 0 / 255, fillColorA = 0 / 255},
		fillProps = {fillType = 0, fillAssetName = '', fillFrame = 0 },
		gradientProps = {direction = 0, fillColorR = 0 / 255,fillColorG = 0 / 255,fillColorB = 0 / 255, fillColorA = 0 / 255},
		physics	= 	{	isEnabled = true, source = 'Object',
						bodyType  = 'dynamic',
						isFixedRotation = false,
						isSleepingAllowed = false,
						isSensor = false,
						isBullet = false,
						gravityScale = 1,
						shapes = {
							{bodyShape = 'Round',
							shape     = { },
							bounce    = 0.2,
							friction  = 0.3,
							density   = 1,
							radius    = 30,
							categoryBits = 0,
							maskBits  = 0,
							groupIndex = 0 },
						}
					}
		}
	obj = instance:createObject(level.layers['main'],objProps, level.assets) 
	objProps = 
	{
		name 	= 'rear_wheel', 
		objType = 'LDEllipse',
		class = '',
		width	= 60.5025,
		height	= 60.5025,
		x		= 1149,
		y		= 114,
		xScale		= 1 * 1,
		yScale		= 1 * 1,
		assetName	= '',
		styleProps	= {radius = 30.2512, cornerRadius = 0,strokeWidth = 1, strokeColorR = 255 / 255,strokeColorG = 255 / 255,strokeColorB = 255 / 255, strokeColorA = 255 / 255, fillColorR = 0 / 255, fillColorG = 0 / 255, fillColorB = 0 / 255, fillColorA = 0 / 255},
		fillProps = {fillType = 0, fillAssetName = '', fillFrame = 0 },
		gradientProps = {direction = 0, fillColorR = 0 / 255,fillColorG = 0 / 255,fillColorB = 0 / 255, fillColorA = 0 / 255},
		physics	= 	{	isEnabled = true, source = 'Object',
						bodyType  = 'dynamic',
						isFixedRotation = false,
						isSleepingAllowed = false,
						isSensor = false,
						isBullet = false,
						gravityScale = 1,
						shapes = {
							{bodyShape = 'Round',
							shape     = { },
							bounce    = 0.2,
							friction  = 0.3,
							density   = 1,
							radius    = 30,
							categoryBits = 0,
							maskBits  = 0,
							groupIndex = 0 },
						}
					}
		}
	obj = instance:createObject(level.layers['main'],objProps, level.assets) 
	objProps = 
	{
		name 	= 'join_wheels', 
		objType = 'LDJoint',
		class = '',
		width	= 212.402,
		height	= 1.28729,
		x		= 1114,
		y		= 134,
		xScale		= 1 * 1,
		yScale		= 1 * 1,
		rotation	= -1,
		enableDrag	= false, 
		anchorX = 0.5,
		anchorY = 0.5,
		alpha = 1,
		isVisible = true,
		blendMode = 'normal',
		assetName	= '',
		jointProps = {jointType = 'distance', srcObjectName = 'front_wheel',anchorA = {x = 1000, y = 114 },dstObjectName = 'rear_wheel', anchorB = {x = 1153, y = 115 }, paramA = 0,paramB = 0, motorSpeed = 0, limit1 = 0, limit2 = 0, limitEnabled = false, motorEnabled =false },
		}
	obj = instance:createObject(level.layers['main'],objProps, level.assets) 
	objProps = 
	{
		name 	= 'support_front', 
		objType = 'LDJoint',
		class = '',
		width	= 88.8228,
		height	= 48.2733,
		x		= 1064,
		y		= 104,
		xScale		= 1 * 1,
		yScale		= 1 * 1,
		assetName	= '',
		jointProps = {jointType = 'distance', srcObjectName = 'front_wheel',anchorA = {x = 1000, y = 114 },dstObjectName = 'chassis', anchorB = {x = 1073, y = 62 }, paramA = 0,paramB = 0, motorSpeed = 0, limit1 = 0, limit2 = 0, limitEnabled = false, motorEnabled =false },
		}
	obj = instance:createObject(level.layers['main'],objProps, level.assets) 
	objProps = 
	{
		name 	= 'support_rear', 
		objType = 'LDJoint',
		class = '',
		width	= 99.7648,
		height	= 48.2733,
		x		= 1143,
		y		= 97,
		xScale		= 1 * 1,
		yScale		= 1 * 1,
		assetName	= '',
		jointProps = {jointType = 'distance', srcObjectName = 'rear_wheel',anchorA = {x = 1152, y = 115 },dstObjectName = 'chassis', anchorB = {x = 1074, y = 63 }, paramA = 0,paramB = 0, motorSpeed = 0, limit1 = 0, limit2 = 0, limitEnabled = false, motorEnabled =false },
		}
	obj = instance:createObject(level.layers['main'],objProps, level.assets) 
	objProps = 
	{
		name 	= 'front_shock', 
		objType = 'LDJoint',
		class = '',
		width	= 72,
		height	= 50,
		x		= 1041,
		y		= 86,
		xScale		= 1 * 1,
		yScale		= 1 * 1,
		rotation	= 15,
		enableDrag	= false, 
		anchorX = 0.5,
		anchorY = 0.5,
		alpha = 1,
		isVisible = true,
		blendMode = 'normal',
		assetName	= '',
		jointProps = {jointType = 'distance', srcObjectName = 'front_wheel',anchorA = {x = 1001, y = 113 },dstObjectName = 'chassis', anchorB = {x = 1001, y = 67 }, paramA = 0,paramB = 0, motorSpeed = 0, limit1 = 0, limit2 = 0, limitEnabled = false, motorEnabled =false },
		}
	obj = instance:createObject(level.layers['main'],objProps, level.assets) 
	objProps = 
	{
		name 	= 'rear_shock', 
		objType = 'LDJoint',
		class = '',
		width	= 75.3063,
		height	= 50.2042,
		x		= 1110,
		y		= 89,
		xScale		= 1 * 1,
		yScale		= 1 * 1,
		assetName	= '',
		jointProps = {jointType = 'distance', srcObjectName = 'rear_wheel',anchorA = {x = 1149, y = 114 },dstObjectName = 'chassis', anchorB = {x = 1149, y = 64 }, paramA = 0,paramB = 0, motorSpeed = 0, limit1 = 0, limit2 = 0, limitEnabled = false, motorEnabled =false },
		}
	obj = instance:createObject(level.layers['main'],objProps, level.assets) 
	objProps = 
	{
		name 	= 'bezier_9', 
		objType = 'LDBezier',
		class = '',
		width	= 0,
		height	= 0,
		x		= 511,
		y		= 448,
		xScale		= 1 * 1,
		yScale		= 1 * 1,
		assetName	= '',
		styleProps	= {radius = 0, cornerRadius = 0,strokeWidth = 1, strokeColorR = 255 / 255,strokeColorG = 255 / 255,strokeColorB = 255 / 255, strokeColorA = 255 / 255, fillColorR = 0 / 255, fillColorG = 0 / 255, fillColorB = 0 / 255, fillColorA = 0 / 255},
		fillProps = {fillType = 0, fillAssetName = '', fillFrame = 0 },
		gradientProps = {direction = 0, fillColorR = 0 / 255,fillColorG = 0 / 255,fillColorB = 0 / 255, fillColorA = 0 / 255},
		pointProps = {outputType = 'Display', xPoints = {672,512,512,448,352,224,-4,64,-192,-352,-480,-512,-672}, yPoints = { -224,-128,64,128,128,0,196,0,32,128,224,96,-128 }},
		physics	= 	{	isEnabled = true, source = 'Object',
						bodyType  = 'static',
						isFixedRotation = false,
						isSleepingAllowed = false,
						isSensor = false,
						isBullet = false,
						gravityScale = 1,
						shapes = {
							{bodyShape = 'Polygon',
							shape     = {673,-224,513,-128,513,64,449,128,353,128,225,0,-3,196,65,0,-191,32,-351,128,-479,224,-511,96,-671,-128 },
							bounce    = 0.2,
							friction  = 0.3,
							density   = 1,
							radius    = 0,
							categoryBits = 0,
							maskBits  = 0,
							groupIndex = 0 },
						}
					}
		}
	obj = instance:createObject(level.layers['main'],objProps, level.assets) 
	objProps = 
	{
		name 	= 'rope_pivot', 
		objType = 'LDRectangle',
		class = '',
		width	= 32,
		height	= 32,
		x		= 447,
		y		= 16,
		xScale		= 1 * 1,
		yScale		= 1 * 1,
		assetName	= '',
		styleProps	= {radius = 16, cornerRadius = 0,strokeWidth = 1, strokeColorR = 255 / 255,strokeColorG = 255 / 255,strokeColorB = 255 / 255, strokeColorA = 255 / 255, fillColorR = 0 / 255, fillColorG = 0 / 255, fillColorB = 0 / 255, fillColorA = 0 / 255},
		fillProps = {fillType = 0, fillAssetName = '', fillFrame = 0 },
		gradientProps = {direction = 0, fillColorR = 0 / 255,fillColorG = 0 / 255,fillColorB = 0 / 255, fillColorA = 0 / 255},
		physics	= 	{	isEnabled = true, source = 'Object',
						bodyType  = 'static',
						isFixedRotation = false,
						isSleepingAllowed = false,
						isSensor = false,
						isBullet = false,
						gravityScale = 1,
						shapes = {
							{bodyShape = 'Rectangle',
							shape     = { },
							bounce    = 0.2,
							friction  = 0.3,
							density   = 1,
							radius    = 0,
							categoryBits = 0,
							maskBits  = 0,
							groupIndex = 0 },
						}
					}
		}
	obj = instance:createObject(level.layers['main'],objProps, level.assets) 
	objProps = 
	{
		name 	= 'car_body', 
		objType = 'LDPolygon',
		class = '',
		width	= 0,
		height	= 0,
		x		= 1089,
		y		= 34,
		xScale		= 1 * 1,
		yScale		= 1 * 1,
		assetName	= '',
		styleProps	= {radius = 0, cornerRadius = 0,strokeWidth = 1, strokeColorR = 255 / 255,strokeColorG = 255 / 255,strokeColorB = 255 / 255, strokeColorA = 255 / 255, fillColorR = 0 / 255, fillColorG = 0 / 255, fillColorB = 0 / 255, fillColorA = 0 / 255},
		fillProps = {fillType = 0, fillAssetName = '', fillFrame = 0 },
		gradientProps = {direction = 0, fillColorR = 0 / 255,fillColorG = 0 / 255,fillColorB = 0 / 255, fillColorA = 0 / 255},
		pointProps = {outputType = 'Display', xPoints = {-93,-31,48,92}, yPoints = { 20,-21,-13,20 }},
		physics	= 	{	isEnabled = true, source = 'Object',
						bodyType  = 'dynamic',
						isFixedRotation = false,
						isSleepingAllowed = false,
						isSensor = false,
						isBullet = false,
						gravityScale = 1,
						shapes = {
							{bodyShape = 'Polygon',
							shape     = {-93,21,-31,-20,48,-12,92,21 },
							bounce    = 0.2,
							friction  = 0.3,
							density   = 1,
							radius    = 0,
							categoryBits = 0,
							maskBits  = 0,
							groupIndex = 0 },
						}
					}
		}
	obj = instance:createObject(level.layers['main'],objProps, level.assets) 
	objProps = 
	{
		name 	= 'joint_14', 
		objType = 'LDJoint',
		class = '',
		width	= 77.2372,
		height	= 9.01101,
		x		= 1034,
		y		= 59,
		xScale		= 1 * 1,
		yScale		= 1 * 1,
		assetName	= '',
		jointProps = {jointType = 'weld', srcObjectName = 'car_body',anchorA = {x = 1035, y = 60 },dstObjectName = 'chassis', anchorB = {x = 1035, y = 60 }, paramA = 0,paramB = 0, motorSpeed = 0, limit1 = 0, limit2 = 0, limitEnabled = false, motorEnabled =false },
		}
	obj = instance:createObject(level.layers['main'],objProps, level.assets) 
	objProps = 
	{
		name 	= 'ball', 
		objType = 'LDEllipse',
		class = '',
		width	= 30,
		height	= 30,
		x		= 1,
		y		= 83,
		xScale		= 1 * 1,
		yScale		= 1 * 1,
		assetName	= '',
		styleProps	= {radius = 15, cornerRadius = 0,strokeWidth = 1, strokeColorR = 255 / 255,strokeColorG = 255 / 255,strokeColorB = 255 / 255, strokeColorA = 255 / 255, fillColorR = 170 / 255, fillColorG = 85 / 255, fillColorB = 0 / 255, fillColorA = 255 / 255},
		fillProps = {fillType = 0, fillAssetName = '', fillFrame = 0 },
		gradientProps = {direction = 0, fillColorR = 170 / 255,fillColorG = 85 / 255,fillColorB = 0 / 255, fillColorA = 255 / 255},
		physics	= 	{	isEnabled = true, source = 'Object',
						bodyType  = 'dynamic',
						isFixedRotation = false,
						isSleepingAllowed = false,
						isSensor = false,
						isBullet = false,
						gravityScale = 1,
						shapes = {
							{bodyShape = 'Round',
							shape     = { },
							bounce    = 0.9,
							friction  = 0.3,
							density   = 2,
							radius    = 15,
							categoryBits = 0,
							maskBits  = 0,
							groupIndex = 0 },
						}
					}
		}
	obj = instance:createObject(level.layers['main'],objProps, level.assets) 
	objProps = 
	{
		name 	= 'rope_joint', 
		objType = 'LDJoint',
		class = '',
		width	= 192,
		height	= 91,
		x		= 91,
		y		= 36,
		xScale		= 1 * 1,
		yScale		= 1 * 1,
		assetName	= '',
		jointProps = {jointType = 'rope', srcObjectName = 'rope_pivot',anchorA = {x = 0, y = 0 },dstObjectName = 'ball', anchorB = {x = 1, y = 1 }, paramA = 0,paramB = 0, motorSpeed = 0, limit1 = 0, limit2 = 0, limitEnabled = false, motorEnabled =false },
		}
	obj = instance:createObject(level.layers['main'],objProps, level.assets) 
	instance:insertLayer(level,level.layers['main'])
	---- hud ------------------------------------------------------------------------------------
	level.layers['hud'] = {} 
	level.layers['hud'].view = display.newGroup() 
	level.layers['hud'].name = 'hud' 
	if (level.parallaxEnabled) then
		level.layers['hud'].speed = {x = 0, y = 0}
		level.layers['hud'].repeated = false
		level.layers['hud'].cullingMethod = 0
	else
		level.layers['hud'].cullingMethod = 0 
	end
	level.layers['hud'].objects = {} 
	objProps = 
	{
		name 	= 'title', 
		objType = 'LDText',
		class = '',
		width	= 434,
		height	= 38,
		x		= 10,
		y		= 608,
		xScale		= 1 * 1,
		yScale		= 1 * 1,
		rotation	= 0,
		enableDrag	= false, 
		anchorX = 0,
		anchorY = 0,
		alpha = 1,
		isVisible = true,
		blendMode = 'normal',
		assetName	= '',
		textProps	= {text = 'Level Director X - Joint Demo', font = 'Arial Black',size = 24, embossed = false,embossHighlightColorR = 255 / 255,embossHighlightColorG = 255 / 255,embossHighlightColorB = 255 / 255, embossHighlightColorA = 255 / 255,embossShadowColorR = 255 / 255,embossShadowColorG = 255 / 255,embossShadowColorB = 255 / 255, embossShadowColorA = 255 / 255},
		styleProps	= {radius = 217, cornerRadius = 0,strokeWidth = 1, strokeColorR = 255 / 255,strokeColorG = 255 / 255,strokeColorB = 255 / 255, strokeColorA = 255 / 255, fillColorR = 0 / 255, fillColorG = 0 / 255, fillColorB = 0 / 255, fillColorA = 0 / 255},
		fillProps = {fillType = 0, fillAssetName = '', fillFrame = 0 },
		gradientProps = {direction = 0, fillColorR = 0 / 255,fillColorG = 0 / 255,fillColorB = 0 / 255, fillColorA = 0 / 255},
		}
	obj = instance:createObject(level.layers['hud'],objProps, level.assets) 
	instance:insertLayer(level,level.layers['hud'])
	--level.ldVersion = 1.0.0	-- Level Director Version
	-- Parallax (after layers)
	level.canvasWidth = 1920
	level.canvasHeight = 640
	if level.parallaxEnabled then
		level.parallaxInfinite = false
		level.parallaxDamping = 1
		instance:createParallax(level)
	end
	return level
end -- createLevel
return M

